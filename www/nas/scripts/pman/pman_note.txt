pman-note

to|from 形式納品手続き手順
カット番号を引数で与える||納品データを引数にする

自身のパスを引数の第一候補にする　from/フォルダ内のデータが対象

マスターの位置を特定（ユーザ確認）
マスターツリー外では実行不可にする＞引数不用

	内容を比較
納品データがコンフリクトがないことを確認
	工程をチェック
		_[<stage>]が一致　＃
実際の納品データのみを抽出してマスターに複製（移動）する
事故を防止するために手順は以下を使用
	対象データの複製
	コピー元データとコピー先の比較　ファイル名、容量、日付を照合すべて一致をクリア条件にする
	一致しないものはログに記録　＞　最終メッセージで出力
	エラー無しでクリアした場合コピー元を削除するして移動扱いとする
	to/ フォルダ内に発注データが存在していたらそれをクリアする（ログ）
収容完了

発注の手順

①マスターを走査して発注可能なエントリ（カット）を工程別にリストアップする
その際、
発注先をDBの情報から選んで添える（作業担当またはチェック担当）

②確認チェックをひとつずつまたはまとめて行う（管理スタッフのチェック）
その際、必要ならば発注先を変更する
待機を含めて発注できない理由があるエントリはチェックを入れないで次回の集計に加える

③自動処理でチェックのあるエントリを発注先（スタッフ）ごとにマスターから複製してパッケージを作る

パッケージを送付 (to/フォルダに移動)



/**	
 *	@params {String} filepath
 *
 *	ファイルパスを分解して管理パス無名オブジェクト?で返す
 *	現在のpmdb上に一致エントリがあればそのアクセスをそれぞれに配置する
 	一致エントリを見いだせない場合は、セッション内ユニークIDを作成して管理する
 *	終了時に保存する？　随時保存のほうが良い
 
	管理パスエントリは上位から順に以下の形式で文字列の値を持つ
/server/repository/title/episode/xmap/line/stage/job/

	server
特定できない場合は、'SERVER_##'でセッション内ユニークIDを与える
	repository
特定できない場合は、'REPOSITORY_##'でセッション内ユニークIDを与える
	以下同様に
セッション内ユニークIDを自動で与えられた場合はnas.pmdbに当該のエントリを新規に作成する


 */
 
 ツールボックス
	ロケーションブラウザを増設
		アイテムは、画像キャッシュなしのリストのみ
		ブラウズ（リネーム）アイテムオブジェクトのスーパークラスとして記述
		ブラウズ（リネーム）アイテムオブジェクトを継承オブジェクトに変更

	テンポラリフォルダ読み書き機能実装
	編集済みデータの上書き機能実装
	プロジェクト履歴の実装



UAToolbox拡張メモ

タイムシート専用ビューアが必要
サブビューアウインドウを別ウインドウで開く
または、remapingを呼び出す

タイムシートの独立表示が欲しい
サブウインドウも欲しい


ユーザーごとにログイン情報を複数保持する必要あり
UATとGooglDrive等

ユーザ名登録ウインドウのinputBoxを二段にする

ハンドル	[			]
e-mail	[			]

e-mailまたはハンドルのどちらかは必要なものとする？

	renameerUIのボタン操作拡張案

プレフィクスボタンの操作に　キー同時押し([ctrl]|[meta] [shift] [alt])を導入
[alt] freeButton            	自由入力ボタンテキストの変更

CLICK                       	関数実行
[shift]+CLICK               	枝番号を追加しつつ (A-1) A-1a

[ctrl]|[meta]+CLICK         	修正ポストフィックスを追加 (A-1) A-1+ A-1++ A-1+3
[shift]+[ctrl]|[meta]+CLICK 	修正ポストフィックスを削除 (A-1+3) A-1++ A-1+ A-1

[alt]                       	異ラベルならば、グループ追加　同ラベルならグループ削除
[shift]+[alt]               	

「フォルダ内容の更新」を実装　配置が変更されたケースを含めてスタートアップ状態からの更新を実装する
**Electron版のみ


CT用UIの開発

データ・画像等のドラグドロップでCTデータを作るUI
同時に管理用フォルダ（with xMap）を作成する

カット番号の登録（リストから自動作成）
タイムシートの登録（XPS入力・データファイルのドラグドロップ）
管理フォルダ（カット番号）の挿入・削除
CTデータ画像の登録・削除・編集



サインUI

トップに現状のサインを表示（下段ボタンではなくトップ）
下段は 署名|キャンセル

ウィンドウ｜タブ　切り替えのショートカットが必要

新規ウインドウを開く際、ハブウインドウにフォーカスが入っていないと動作しない
ショートカット調整