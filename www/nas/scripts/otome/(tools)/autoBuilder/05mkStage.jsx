/*(05ステージ作成)
	
ステージ生成
	XPS.mkStage() メソッドをコールすると、[CELL]フォルダ内のコンポをタイムシートに合わせて登録したコンポを作成します。
	コンポ継続時間はタイムシートの長さにあわせ、指定がない限り使用するフッテージの最大サイズのコンポを作ります。
	mkStage()メソッドは　クリッピングターゲット(カメラ)オブジェクトを作成しません。	あとで必要に応じて作成してください。
	mkStage()メソッドは　タイムラインの適用は行ないません。あとで必要に応じて適用を行なってください。
	
	ステージビルドの後に以下の手順を実行ればカメラレイヤ作成やタイムラインの適用が行なえます。
	mkStageの二度目以降のコールでは、別の名前を指定しない限りtake2-3　とテイクナンバーが追加されて新しいステージが生成されます。

	戻り値は生成されたステージコンポです。

カメラレイヤ作成	CompItem.addClipTarget(camWidth,camAspect)
	カメラレイヤはCompItemのメソッドとして作成可能です。
	引数としてカメラレイヤの幅をピクセル数で、画面アスペクトを単一数値で与えることができます。
	引数は省略可能でその場合はnasのワークタイトルBDの値が使用されます。
	戻り値は作成したカメラレイヤです。
	
	このメソッドは、カメラコンポは作成しません。

タイムライン適用	CompItem.applyXPS(Xps)
	タイムライン(タイミング)適用はCompItemのメソッドとして実行されます。
	CompItem.applyXPS(Xps)をコールすると、引数で指定したXPSのタイミングがコンポに適用されます。
	引数を省略した場合は、標準のXPSまたはプロジェクト内のタイムシートのうち
	コンポの名前とマッチしたタイムシートの内容が適用されます。
	二度目以降の適用は、以前のタイムリマップを全て消去して新しいタイミングを適用しなおします。

このサンプルでは、タイムシート適用・カメラレイヤ作成・カメラコンポ作成・出力用コンポ作成・レンダーキューの登録　等の一連の処理を
ステージ作成時アクションを使用して行なっています。

システム設定されたアクションフォルダ配置場所にフォルダ"XPS.mkStage"が存在した場合mkStageメソッドは当該のアクションをステージコンポに対して実行します。

注意
ステージ作成メソッドは,XPS（バッファ）オブジェクトのメソッドなので、複数のステージを生成するためにはXPSバッファを切り替えてメソッドを実行する必要があります
このサンプルではアクティブなタイムシートのみのビルドを行なっています。
2010.01.29
*/



var myStage=XPS.mkStage();//バッファの内容が

if(myStage instanceof CompItem)
{
//	myStage.applyXPS(XPS) ;//適用を自動実行に移動したので削除
}else{
	alert(myStage +"　は、コンポではありません")
}
/*
メソッド　XPS.mkStage()　は、処理成功時に作成したコンポが戻値となります
戻値がコンポの場合そのままシートを適用することができます
作成失敗のときfはalseを戻して終了しますので、シート適用前の検査が必要です。

問答無用で全てのステージをビルドする場合は、XPSの内容を順次セレクトしてメソッドを実行する必要があります
例：
		for(var idx=0;idx<nas.XPSStore.getLength();idx++)
		{
			var stgIndex=nas.XPSStore.select(idx+1);//セレクトしてバッファ転送
			var myStage=XPS.mkStage();
			myStage.applyXPS(XPS);//上のメソッドの実行でカレントシートが切り替わっているので引数不用でシート適用
		}


*/
